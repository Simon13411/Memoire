-----------PERMET de recuperer le nouvel id population------------------------
------return l'id si existe, sinon return rien--------------------------------
------Il faudra l'id, donc si besoin d'un count peut etre le faire à cote-----
------------------Je suppose qu'il ne peut pas choisir un ordre null----------
---------------Dans l'ordre les variables c'est chaque fois les name----------
------------ICI c'est les nouvelles valeurs pour population-------------------
------- $1 = order ; $2 = suborder ; $3 = family ; $4 = subfamily ------------
------- $5 = tribu ; $6 = genus ; $7 = subgenus ; $8 = species ---------------
-------------------------- $9 = subspecies -----------------------------------



SELECT "id_population" as newpopu
    FROM "Population" P
    WHERE (P."order_id"=(SELECT "id_order" FROM "Order" WHERE "name"=$1) AND
            (CASE WHEN $2 IS NULL THEN
                P."suborder_id" is NULL
            ELSE
                P."suborder_id" = (SELECT "id_suborder" FROM "subOrder" WHERE "name"=$2)
        	END)
        AND
            (CASE WHEN $3 IS NULL THEN
                P."family_id" is NULL
            ELSE
                P."family_id" = (SELECT "id_family" FROM "Family" WHERE "name"=$3)
        END) AND
          (CASE WHEN $4 IS NULL THEN
                P."subFamily_id" is NULL
            ELSE
                P."subFamily_id" = (SELECT "id_subfamily" FROM "subFamily" WHERE "name"=$4)
        END) AND
          (CASE WHEN $5 IS NULL THEN
                P."tribu_id" is NULL
            ELSE
                P."tribu_id" = (SELECT "id_tribu" FROM "Tribu" WHERE "name"=$5)
        END) AND
          (CASE WHEN $6 IS NULL THEN
                P."genus_id" is NULL
            ELSE
                P."genus_id" = (SELECT "id_genus" FROM "Genus" WHERE "name"=$6)
        END) AND
          (CASE WHEN $7 IS NULL THEN
                P."subGenus_id" is NULL
            ELSE
                P."subGenus_id" = (SELECT "id_subgenus" FROM "subGenus" WHERE "name"=$7)
        END) AND
          (CASE WHEN $8 IS NULL THEN
                P."species_id" is NULL
            ELSE
                P."species_id" = (SELECT "id_species" FROM "Species" WHERE "name"=$8)
        END) AND
          (CASE WHEN $9 IS NULL THEN
                P."subSpecies_id" is NULL
            ELSE
                P."subSpecies_id" = (SELECT "id_subspecies" FROM "subSpecies" WHERE "name"=$9)
        END))

---------------------------------------------------------------------------------------------------------------------------------------------------------------------




----------------SELECT old popu dans la table Population----------------------
---------------Cette requete est la même qu'au dessus-------------------------
----------------sauf que les variables sont les ancienns valeurs--------------
------------------Je suppose que l'ancien ordre ne peut pas etre  null--------
---------------Dans l'ordre les variables c'est chaque fois les name----------
------- $1 = order ; $2 = suborder ; $3 = family ; $4 = subfamily ------------
------- $5 = tribu ; $6 = genus ; $7 = subgenus ; $8 = species ---------------
-------------------------- $9 = subspecies -----------------------------------


SELECT "id_population" as oldpopu
    FROM "Population" P
    WHERE (P."order_id"=(SELECT "id_order" FROM "Order" WHERE "name"=$1) AND
            (CASE WHEN $2 IS NULL THEN
                P."suborder_id" is NULL
            ELSE
                P."suborder_id" = (SELECT "id_suborder" FROM "subOrder" WHERE "name"=$2)
        	END)
        AND
            (CASE WHEN $3 IS NULL THEN
                P."family_id" is NULL
            ELSE
                P."family_id" = (SELECT "id_family" FROM "Family" WHERE "name"=$3)
        END) AND
          (CASE WHEN $4 IS NULL THEN
                P."subFamily_id" is NULL
            ELSE
                P."subFamily_id" = (SELECT "id_subfamily" FROM "subFamily" WHERE "name"=$4)
        END) AND
          (CASE WHEN $5 IS NULL THEN
                P."tribu_id" is NULL
            ELSE
                P."tribu_id" = (SELECT "id_tribu" FROM "Tribu" WHERE "name"=$5)
        END) AND
          (CASE WHEN $6 IS NULL THEN
                P."genus_id" is NULL
            ELSE
                P."genus_id" = (SELECT "id_genus" FROM "Genus" WHERE "name"=$6)
        END) AND
          (CASE WHEN $7 IS NULL THEN
                P."subGenus_id" is NULL
            ELSE
                P."subGenus_id" = (SELECT "id_subgenus" FROM "subGenus" WHERE "name"=$7)
        END) AND
          (CASE WHEN $8 IS NULL THEN
                P."species_id" is NULL
            ELSE
                P."species_id" = (SELECT "id_species" FROM "Species" WHERE "name"=$8)
        END) AND
          (CASE WHEN $9 IS NULL THEN
                P."subSpecies_id" is NULL
            ELSE
                P."subSpecies_id" = (SELECT "id_subspecies" FROM "subSpecies" WHERE "name"=$9)
        END))


---------------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------Update PopuBox-----------------------------
------------En fonction de la nouvelle population----------------
---------En fonction de l'idbox et de l'ancienne population------
-----------------------$1 = nouvelle population ID---------------
---------$2 = boxID ;  $3 = ancienne populationID----------------
--------les deux id population sont get par au dessus------------


UPDATE "PopuBox"
SET "population_id"=$1
WHERE "box_id"=$2 and "population_id"=$3


---------------------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------Update Individu--------------------------
----------------En fonction de la nouvel population---------------
----------------En focntion de l'id individu----------------------
------------------------$1 = nouvelle population ID---------------
-------------------------$2 = individu ID ------------------------
-----le nouvel id popu est get par la premiere requete------------
UPDATE "Individu"
SET "population_id"=$1
WHERE "id_individu" = $2



---------------------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------ADD new population if not exist---------------------------
-----------j'ajoute au max(id popu )+1
----------------Attention l'order ne peut pas etre NULL-----------------------
---------------Dans l'ordre les variables c'est chaque fois les name----------
------------ICI c'est les nouvelles valeurs pour population-------------------
------- $1 = order ; $2 = suborder ; $3 = family ; $4 = subfamily ------------
------- $5 = tribu ; $6 = genus ; $7 = subgenus ; $8 = species ---------------
-------------------------- $9 = subspecies -----------------------------------
 
 INSERT INTO "Population" ("id_population","order_id", "suborder_id", "family_id", "subFamily_id", "tribu_id", "genus_id", "subGenus_id", "species_id", "subSpecies_id")
VALUES
((SELECT MAX("id_population")+1 FROM "Population"),
(SELECT "id_order" FROM "Order" WHERE "name"=$1),
(SELECT "id_suborder" FROM "subOrder" WHERE "name"=$2) ,
(SELECT "id_family" FROM "Family" WHERE "name"=$3 ),
(SELECT "id_subfamily" FROM "subFamily" WHERE "name"=$4 ),
(SELECT "id_tribu" FROM "Tribu" WHERE "name"=$5 ),
(SELECT "id_genus" FROM "Genus" WHERE "name"=$6 ),
(SELECT "id_subgenus" FROM "subGenus" WHERE "name"=$7 ),
(SELECT "id_species" FROM "Species" WHERE "name"=$8 ),
(SELECT "id_subspecies" FROM "subSpecies" WHERE "name"=$9 ))


---------------------------------------------------------------------------------------------------------------------------------------------------------------------


---------CHECK if oldpopu in Individu------
-----------$1 = ancienne popu--------------
-----return un counter = 0 si pas présent--


SELECT Count(*)
FROM "Individu" I
WHERE I."population_id"=$1
 

---------------------------------------------------------------------------------------------------------------------------------------------------------------------


------CHECK if oldpopu in PopuBox----------
-----------$1 = ancienne popu--------------
-----return un counter = 0 si pas présent--

SELECT Count(*)
FROM "PopuBox" I
WHERE I."population_id"=$1

---------------------------------------------------------------------------------------------------------------------------------------------------------------------


-------if la somme des deux requetes avant =0--------
---------On peut delete la population----------------
----------------$1 = ancienne popu-------------------

DELETE 
FROM "Population"
WHERE "id_population"=$1


---------------------------------------------------------------------------------------------------------------------------------------------------------------------